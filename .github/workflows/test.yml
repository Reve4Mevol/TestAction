name: CMake

on: [push, pull_request]

env:
  BUILD_TYPE: Release

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Install XRandr Development Package For GLFW3
      run: sudo apt-get install libxrandr-dev
      
    - name: Install SDL2 Development Package For GLFW3
      run: sudo apt-get install libsdl2-dev
    
    - name: Get Lunarg Signing Key
      run: wget -qO - https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -

    - name: Get Vulkan SDK Package List
      run: sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-1.2.170-focal.list https://packages.lunarg.com/vulkan/1.2.170/lunarg-vulkan-1.2.170-focal.list

    - name: Update Apt Infos
      run: sudo apt update
    
    - name: Install Vulkan SDK
      run: sudo apt install vulkan-sdk

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE
      
      
  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Download scoop and Install Vulkan SDK
      run: powershell -command "mkdir -p C:/ScoopApps;Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh');scoop install vulkan"
      
    - name: Setup VULKAN_SDK
      run: cmd /c setx VULKAN_SDK "%USERPROFILE%\scoop\apps\vulkan\current"
   
    - name: ls SDK_PATH_LIB
      run: cmd /c dir "%VULKAN_SDK%\Lib"
      
    - name: ls SDK_PATH_BIN
      run: cmd /c dir "%VULKAN_SDK%\Bin"

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE
